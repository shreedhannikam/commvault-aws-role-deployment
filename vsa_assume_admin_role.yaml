# Purpose: Commvault role to be associated with Media agents
# From Commvault example demoEC2role.json 

AWSTemplateFormatVersion: '2010-09-09'
Description: Role and permissions required by Commvault for Media agent

Resources:
  vsaCommVaultMgmtRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: vsaCommVaultMgmtRole
      Description: Role and permissions required by Commvault for Media agent
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  vsaCommvaultPolicies: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: vsaCommvaultPolicies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - "ec2:DescribeTags"
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - s3:PutAnalyticsConfiguration
          - s3:GetObjectAcl
          - s3:GetBucketObjectLockConfiguration
          - s3:PutLifecycleConfiguration
          - s3:PutBucketAcl
          - s3:PutObjectTagging
          - s3:DeleteObject
          - s3:GetBucketWebsite
          - s3:PutReplicationConfiguration
          - s3:DeleteObjectVersionTagging
          - s3:GetBucketNotification
          - s3:PutBucketCORS
          - s3:PutObject
          - s3:GetObject
          - s3:PutBucketNotification
          - s3:PutBucketLogging
          - s3:GetAnalyticsConfiguration
          - s3:PutBucketObjectLockConfiguration
          - s3:GetLifecycleConfiguration
          - s3:GetInventoryConfiguration
          - s3:GetBucketTagging
          - s3:PutAccelerateConfiguration
          - s3:DeleteObjectVersion
          - s3:GetBucketLogging
          - s3:ListBucketVersions
          - s3:RestoreObject
          - s3:ListBucket
          - s3:GetAccelerateConfiguration
          - s3:GetBucketPolicy
          - s3:PutEncryptionConfiguration
          - s3:GetEncryptionConfiguration
          - s3:PutBucketTagging
          - s3:GetBucketRequestPayment
          - s3:GetObjectTagging
          - s3:GetMetricsConfiguration
          - s3:PutBucketVersioning
          - s3:PutObjectAcl
          - s3:GetBucketPublicAccessBlock
          - s3:PutBucketPublicAccessBlock
          - s3:PutMetricsConfiguration
          - s3:GetBucketVersioning
          - s3:GetBucketAcl
          - s3:PutInventoryConfiguration
          - s3:PutBucketWebsite
          - s3:ListAllMyBuckets
          - s3:PutObjectRetention
          - s3:GetBucketCORS
          - s3:PutBucketPolicy
          - s3:GetBucketLocation
          Resource:
          - "*"
        - Effect: Allow
          Action: sts:AssumeRole
          Resource: arn:aws:iam::*:role/vsaCommVaultTenantRole       
          # Resource: arn:aws:iam::*:role/vsaCommVaultTenantRole # Wildcard helps with multiple accounts, account numbers can be used to be more specific.       
      Roles: 
          - Ref: "vsaCommVaultMgmtRole"
  MyInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      InstanceProfileName: "vsaCommVaultProfile"
      Path: "/"
      Roles: 
          - Ref: "vsaCommVaultMgmtRole"              

Outputs:
  RoleARN:
    Description: Commvault instance role
    Value: !Sub arn:aws:iam::${AWS::AccountId}:role/vsaCommVaultMgmtRole
    Export:
      Name: Commvault-instance-role